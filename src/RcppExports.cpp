// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// createPNG
void createPNG(const Rcpp::IntegerMatrix& mat, const CharacterVector& toFilename);
RcppExport SEXP _libattopng_createPNG(SEXP matSEXP, SEXP toFilenameSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::IntegerMatrix& >::type mat(matSEXP);
    Rcpp::traits::input_parameter< const CharacterVector& >::type toFilename(toFilenameSEXP);
    createPNG(mat, toFilename);
    return R_NilValue;
END_RCPP
}
// intToRGBA
Rcpp::List intToRGBA(const int a1);
RcppExport SEXP _libattopng_intToRGBA(SEXP a1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type a1(a1SEXP);
    rcpp_result_gen = Rcpp::wrap(intToRGBA(a1));
    return rcpp_result_gen;
END_RCPP
}
// convertFloat
int convertFloat(const float a1);
RcppExport SEXP _libattopng_convertFloat(SEXP a1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const float >::type a1(a1SEXP);
    rcpp_result_gen = Rcpp::wrap(convertFloat(a1));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_libattopng_createPNG", (DL_FUNC) &_libattopng_createPNG, 2},
    {"_libattopng_intToRGBA", (DL_FUNC) &_libattopng_intToRGBA, 1},
    {"_libattopng_convertFloat", (DL_FUNC) &_libattopng_convertFloat, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_libattopng(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
